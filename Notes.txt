JQUERY became the most important Javascript library for a decade because it solved the problem interoperability on different browsers
REACT why popular : CRUD complex websites
Automatic Semi colon insertion
%C
Undefined | Null | Boolean | String | Number | ES6  (BigInt | Symbol)
**
Strings cant break on to the next line
Delimiters
== and ===
coercion when adding strings and numbers
if else is well suited bor binary choices
%c convert your arguments to css
comparison of strings
toString and valueOf methods //important
Compare a boolean with another value
In JavaScript, null equals undefined
If either value is NaN, then the equal operator(==) returns false
The not-equal (!=) operator returns true when comparing the NaN with another value
The strict equal and not strict equal operators behave like the equal and not equal operators except that they donâ€™t convert the operand before comparison.
Truthy and falsy
The conditional (ternary) operator is the only JavaScript operator that takes three operands
[Objects]there's one really useful thing that bracket notation has but is not available in the dot notation: It can evaluate expressions.
Arrays are Objects
.concat() method
To read each individual character at a specific index in a string, starting from zero, I can use the charAt() method
The indexOf returns the location of the first position that matches a character
The lastIndexOf finds the last match, otherwise it works the same as indexOf.
The split method chops up the string into an array of sub-strings
toUpperCase() toLowerCase() 
Assigning a function as a method of an object
using typeof()--- array,function can also be passed as a parameter
Bugs and errors
Main types of errors : Range, Syntax, Type, and Reference
try and catch used to continue execution after an error
undefined : in functions when it returns nthg (just displays), when a variable is not assigned a value, object property that doesnot exist
Empty : " " ' '
null : represents intentional absence of object value
We can use return values from one function inside another function.
JavaScript functions are truly first-class citizens, which can be assigned to variable names and passed around just like I would pass around a string, a number, an object, etc.
A higher-order function is a function that accepts other functions as arguments or returns functions when invoked (or both)
A pure function returns the exact same result as long as it's given the same values. 
For a function to be considered pure is that it should not have side-effects. A side-effect is any instance where a function makes a change outside of itself.
Declared with var : 1. can be used before declaration, 2. can be redeclared 3. can be scoped to a function or globally
Declared with let and const : 1. cant be used before delaration 2. cant be redeclared (in let can be reassigned) 3. scoped to block 4. const must be initialized (no access before initialization), cant be reassigned
this keyword
The four fundamental OOP principles are inheritance, encapsulation, abstraction and polymorphism
Primitive variables will always be more performant than Objects
Each object in JavaScript is unique, you can't compare a String object with another String object, even when their values are identical. When comparing objects because it is not the values that you pass to the constructor that are being compared, but rather the memory location where objects are saved.
When the class syntax is used in JavaScript, this results in only shared methods being stored on the prototype, while the constructor() function sets up the mechanism for saving instance-specific values ("data") at the time of object instantiation.
In addition to the inherited properties, you also automatically inherit all the methods that exist on a prototype
Destructuring Objects
A For Of loop cannot work on an object directly, since an object is not iterable.
Contrary to objects, arrays are iterable.
A for of loop can be run on arrays to loop over objects
Template literals are an alternative way of working with strings, which was introduced in the ES6
Differences between a template and regular string
    - it allows for variable interpolation
    - can span multiple lines.
    - expression evaluation : possible to perform arithmetic operation inside a template literal expression
Most common examples of data structures : Object, Array, Map and Set data structures.
Map data structure : key-value pair, unlike an object(only strings or symbols) any value can be used as a key, and are iterable 
Set data structure : all values unique
A map can feel very similar to an object in JS. However, it doesn't have inheritance. No prototypes! This makes it useful as a data storage.
Spread Operator : used to unpack a box
Rest Operator : used to build a smaller box and fill items into it
